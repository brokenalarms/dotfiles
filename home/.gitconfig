[user]
	name = Daniel Lawrence
	email = dalawrence@linkedin.com
[alias]
	a = add
        au="!f() { git add $(git ls-files -o --exclude-standard); }; f"
	b = branch
	ca = commit --amend
	can = commit --amend --no-edit
	caa = commit -a --amend
	caan = commit -a --amend --no-edit
	cc = !git status | grep 'both modified' | tail -n1 | cut -d : -f2 | pbcopy && pbpaste

	# creates a new branch based off origin/master and set origin master to upstream
	# usage: git create <branch_name>
	create = "!f() { if [[ -z $(git status -s) ]]; then git checkout -b $1 origin/master && git reset --hard origin/master && mint update; else echo  "Cannot create new branch: unsaved changes."; fi; }; f"

	co = checkout
	d = diff
	dn = diff --name-only
	ds = diff --staged
	dsn = diff --staged --name-only
	dh = g diff head^
	dhn = g diff head^ --name-only
	g = !git
	git = !git
	l = log
	l1 = log -1
	ls = log --oneline
	ls1 = log --oneline -1
	resetcommit = "!f() { HEAD_COMMIT=`git rev-parse head` && git reset --hard origin/master && git cherry-pick $HEAD_COMMIT; }; f"
	pr = pull --rebase
	rc = !"f() { PARENT_COMMIT=`git rev-parse head^` && git review create --open --no-prompt \"$@\" --parent $PARENT_COMMIT | pbcopy && pbpaste; }; f"
	rcf = !"f() { PARENT_COMMIT=`git rev-parse head^` && mint format && git caan && git review create --open --no-prompt \"$@\" --parent $PARENT_COMMIT | pbcopy && pbpaste; }; f"
        ri = rebase --interactive
	ru = !"f() { PARENT_COMMIT=`git rev-parse head^` && git review update --update-desc --parent $PARENT_COMMIT \"$@\"; }; f"
	ruf = !"f() { PARENT_COMMIT=`git rev-parse head^` && mint format && git caan && git review update --update-desc --parent $PARENT_COMMIT \"$@\"; }; f"
	rs = restore --staged
	rv = remote -v
	s = status
	sa = submit --async
	set = !git branch --set-upstream-to=$1
	setm = !git branch --set-upstream-to=origin/master
	outahere = "!f() { git setm && git pull --rebase && git review dcommit && git submit --async; }; f"
	sortdiff = !git diff $@ | grep ^[+-] | sort --key=1.2 | uniq -u -s1
	track = branch --set-upstream-to=$1
	unstage = reset --
[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[core]
	whitespace = trailing-space,space-before-tab
	excludesfile = /Users/dalawren/.gitignore_global
	pager = less -FX
	whitespace = trailing-space,space-before-tab
[apply]
	whitespace = fix
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[branch]
	autosetuprebase = always
[rerere]
	enabled = 1
[filesystem "Oracle Corporation|1.8.0_121|/dev/disk1s6"]
	timestampResolution = 1001 milliseconds
	minRacyThreshold = 0 nanoseconds
[filesystem "Oracle Corporation|1.8.0_172|/dev/disk1s6"]
	timestampResolution = 1001 milliseconds
	minRacyThreshold = 0 nanoseconds
[pager]
	branch = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
